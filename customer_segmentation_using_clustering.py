# -*- coding: utf-8 -*-
"""Customer Segmentation Using Clustering

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JeLPvRZHOrPg7r-jU5uf-h3b91--EsVV
"""

!pip install kaggle --quiet
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.preprocessing import StandardScaler
from sklearn.cluster import KMeans
from sklearn.metrics import silhouette_score
from sklearn.decomposition import PCA

import kagglehub
path = kagglehub.dataset_download("vjchoudhary7/customer-segmentation-tutorial-in-python")
print("Path to dataset files:", path)

df = pd.read_csv(path + "/Mall_Customers.csv")
df.head()

print("\n--- Dataset Info ---")
print(df.info())

print("\n--- Missing Values ---")
print(df.isna().sum())

print("\n--- Duplicate Rows ---")
print(df.duplicated().sum())

print("\n--- Summary Stats ---")
print(df.describe())

# relevant features
X = df[["Age", "Annual Income (k$)", "Spending Score (1-100)"]]

# Standardize features
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

inertias = []
silhouettes = []
K = range(2, 11)

for k in K:
    km = KMeans(n_clusters=k, random_state=42, n_init="auto")
    labels = km.fit_predict(X_scaled)
    inertias.append(km.inertia_)
    silhouettes.append(silhouette_score(X_scaled, labels))

plt.figure(figsize=(6,4))
plt.plot(K, inertias, marker="o")
plt.title("Elbow Method")
plt.xlabel("k")
plt.ylabel("Inertia")
plt.show()

# silhouette scores
plt.figure(figsize=(6,4))
plt.plot(K, silhouettes, marker="o")
plt.title("Silhouette Score vs k")
plt.xlabel("k")
plt.ylabel("Silhouette Score")
plt.show()

best_k = K[np.argmax(silhouettes)]
print(f" Best k = {best_k} (highest silhouette = {max(silhouettes):.3f})")

kmeans = KMeans(n_clusters=best_k, random_state=42, n_init="auto")
df["Cluster"] = kmeans.fit_predict(X_scaled)

df.head()

# PCA 2D visualization
pca = PCA(n_components=2)
X_pca = pca.fit_transform(X_scaled)

plt.figure(figsize=(6,6))
for c in range(best_k):
    plt.scatter(X_pca[df.Cluster==c, 0], X_pca[df.Cluster==c, 1], label=f"Cluster {c}")
plt.xlabel("PCA1")
plt.ylabel("PCA2")
plt.title("Customer Segmentation (PCA)")
plt.legend()
plt.show()

df["Cluster"].value_counts().sort_index().plot(kind="bar", figsize=(6,4))
plt.title("Cluster Sizes")
plt.xlabel("Cluster")
plt.ylabel("Number of Customers")
plt.show()

cluster_profile = df.groupby("Cluster")[["Age", "Annual Income (k$)", "Spending Score (1-100)"]].mean().round(1)
print("\n--- Cluster Profiles ---")
print(cluster_profile)

# insights
for c, row in cluster_profile.iterrows():
    print(f"\nCluster {c}: avg Age={row['Age']}, Income={row['Annual Income (k$)']}, Spending={row['Spending Score (1-100)']}")